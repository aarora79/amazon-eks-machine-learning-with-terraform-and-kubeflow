{{- if .Values.ebs  }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-{{ .Release.Name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ebs-sc-wait
  resources:
    requests:
      storage: {{ .Values.ebs.storage | default "100Gi" }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-process-{{ .Release.Name }}
data:
  data-process.sh: |
    #!/bin/bash
   
    {{- if .Values.git.repo_url }}
    mkdir -p $HOME/tmp
    GIT_CLONE_DIR=$HOME/tmp/$HOSTNAME
    [[ -d $GIT_CLONE_DIR ]] && rm -rf $GIT_CLONE_DIR
    git clone {{ .Values.git.repo_url }} $GIT_CLONE_DIR
    cd $GIT_CLONE_DIR

    {{- if .Values.git.branch }}
    git checkout {{ .Values.git.branch }}
    {{- end }}

    {{- if .Values.git.commit }}
    git fetch origin {{ .Values.git.commit }}
    git reset --hard {{ .Values.git.commit }}
    {{- end }}
    
    {{- end }}
    
    {{- range .Values.inline_script }}
    {{ . | indent 4 }}
    {{- end }}

    {{- range .Values.pre_script }}
    {{ . }}
    {{- end }}
    
    {{- range .Values.process.command }}
    {{ . }} \
    {{- end }}
    {{- range .Values.process.args }}
    {{ . }} \
    {{- end }}
    {{- if .Values.process.command }}
    && echo "Processing script done"
    {{- end }}

    {{- range .Values.post_script }}
    {{ . }}
    {{- end }}

    {{- if .Values.git.repo_url }}
    cd $HOME
    rm -rf $GIT_CLONE_DIR
    {{- end }}

---
apiVersion: v1
kind: Pod
metadata:
  name: data-process-{{ .Release.Name }}
  annotations:
    karpenter.sh/do-not-disrupt: "true"
    sidecar.istio.io/inject: 'false'
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  restartPolicy: Never
  volumes:
  - name: config
    configMap:
      defaultMode: 420
      items:
      - key: data-process.sh
        mode: 365
        path: data-process.sh
      name: data-process-{{ .Release.Name }}
  - name: shm
    hostPath:
      path: /dev/shm
      type: Directory
  {{- $pv_index := 1 }}
  {{- range $pv := .Values.pvc }}
  - name: pv-{{ $pv_index }}
    persistentVolumeClaim:
      claimName: {{ $pv.name }}
  {{- $pv_index = add $pv_index 1 }}
  {{- end }}
  {{- if .Values.ebs }}
  - name: ebs
    persistentVolumeClaim:
      claimName: ebs-{{ .Release.Name }}
  {{- end }}
  containers:
  - name: data-process
    env:
    {{- range $v := .Values.process.env }}
    - name: {{ $v.name }}
      value: "{{ tpl $v.value $ }}"
    {{- end }}
    command:
    -  sh 
    - /etc/config/data-process.sh
    image: {{ .Values.image }}
    volumeMounts:
    - mountPath: /etc/config
      name: config
    {{- $pv_index := 1 }}
    {{- range $pv := .Values.pvc }}
    - mountPath: {{ $pv.mount_path }}
      name: pv-{{ $pv_index }}
    {{- $pv_index = add $pv_index 1 }}
    {{- end }}
    {{- if .Values.ebs }}
    - name: ebs
      mountPath: {{ .Values.ebs.mount_path | default "/tmp" }}
    {{- end }}
    resources:
      requests:
      {{- range $k, $v := .Values.resources.requests }}
        {{ $k }}: {{ $v }}
      {{- end }}
      limits:
      {{- range $k, $v := .Values.resources.limits }}
        {{ $k }}: {{ $v }}
      {{- end }}
