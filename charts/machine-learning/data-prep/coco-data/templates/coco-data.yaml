---
apiVersion: v1
kind: ConfigMap
metadata:
  name: coco-data-{{ .Release.Name }}
data:
  coco-data.sh: |
    #!/bin/bash

    yum install -y unzip
    yum install -y wget

    if [ -d $DATA_DIR ] && [ ! -z "$(ls -A $DATA_DIR)" ]
    then 
      echo "$DATA_DIR exists and is not empty" 
      exit 0
    fi
    mkdir -p $DATA_DIR
    echo "Data dir: $DATA_DIR"

    DOWNLOAD_DIR=$DATA_DIR.$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 16 | head -n 1)
    mkdir -p $DOWNLOAD_DIR
    echo "Download dir: $DOWNLOAD_DIR"
    
    wget -O $DOWNLOAD_DIR/train2017.zip http://images.cocodataset.org/zips/train2017.zip
    unzip $DOWNLOAD_DIR/train2017.zip  -d $DATA_DIR

    wget -O $DOWNLOAD_DIR/val2017.zip http://images.cocodataset.org/zips/val2017.zip
    unzip $DOWNLOAD_DIR/val2017.zip -d $DATA_DIR

    wget -O $DOWNLOAD_DIR/test2017.zip http://images.cocodataset.org/zips/test2017.zip
    unzip $DOWNLOAD_DIR/test2017.zip -d $DATA_DIR

    wget -O $DOWNLOAD_DIR/annotations_trainval2017.zip http://images.cocodataset.org/annotations/annotations_trainval2017.zip
    unzip $DOWNLOAD_DIR/annotations_trainval2017.zip -d $DATA_DIR

    mkdir $DATA_DIR/pretrained-models
    wget -O $DATA_DIR/pretrained-models/ImageNet-R50-AlignPadding.npz http://models.tensorpack.com/FasterRCNN/ImageNet-R50-AlignPadding.npz
    wget -O $DATA_DIR/pretrained-models/ImageNet-R101-AlignPadding.npz http://models.tensorpack.com/FasterRCNN/ImageNet-R101-AlignPadding.npz

    rm -rf $DOWNLOAD_DIR
---
apiVersion: v1
kind: Pod
metadata:
  name: coco-data-{{ .Release.Name }}
  annotations:
    karpenter.sh/do-not-disrupt: "true"
    sidecar.istio.io/inject: 'false'
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  restartPolicy: Never
  volumes:
  - name: pv
    persistentVolumeClaim:
      claimName: {{ .Values.pvc.name }} 
  - name: config
    configMap:
      defaultMode: 420
      items:
      - key: coco-data.sh
        mode: 365
        path: coco-data.sh
      name: coco-data-{{ .Release.Name }}
  containers:
  - name: coco-data
    env:
    - name: DATA_DIR 
      value: {{ .Values.pvc.mount_path }}/{{ .Values.pvc.data_path }}
    command:
    -  sh 
    - /etc/config/coco-data.sh
    image: amazonlinux
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - mountPath: /etc/config
      name: config
    - mountPath: {{ .Values.pvc.mount_path }}
      name: pv
    resources:
      requests:
        cpu: "300m"
        memory: "64Mi"
      limits:
        cpu: "1000m"
        memory: "256Mi"
