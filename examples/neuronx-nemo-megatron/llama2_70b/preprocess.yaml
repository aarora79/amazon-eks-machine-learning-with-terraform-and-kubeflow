image: public.ecr.aws/neuron/pytorch-training-neuronx:2.1.2-neuronx-py310-sdk2.20.2-ubuntu20.04
backoff_limit: 2000
ebs:
  storage: 400Gi
  mount_path: /tmp
resources:
  requests:
    "aws.amazon.com/neuron": 16
  limits:
    "aws.amazon.com/neuron": 16
tolerations:
  - key: "aws.amazon.com/neuron"
    operator: "Exists"
    effect: "NoSchedule"
git:
  repo_url: "https://github.com/aws-neuron/neuronx-nemo-megatron.git"
  commit: d22aabf42ceb1be5bd1f647806caf4598db801cc
  branch: main
pre_script: 
  - pip3 install --upgrade pip
  - ./build.sh && pip3 install --extra-index-url=https://pip.repos.neuron.amazonaws.com --force-reinstall  torch-neuronx==2.* torchvision ./build/*.whl
  - pip3 install -r requirements.txt
  - 'python3 -c "from nemo.collections.nlp.data.language_modeling.megatron.dataset_utils import compile_helper; compile_helper()"'
  - 'if [ -d $DATA_ROOT ] && [ ! -z "$(ls -A $DATA_ROOT)" ]; then echo "$DATA_ROOT exists and is not empty" && exit 0; fi'
  - mkdir -p $DATA_ROOT
  - SCRIPT_DIR=$GIT_CLONE_DIR/nemo/scripts/nlp_language_modeling/
  - cd $SCRIPT_DIR
  - mkdir -p $LOG_ROOT
  - OUTPUT_LOG=$LOG_ROOT/preprocess.log
  - mkdir /tmp/datasets
post_script:
  - cp -r /tmp/datasets $DATA_ROOT/
process:
  env:
    - name: HOME
      value: /tmp
    - name: LOG_ROOT
      value: /efs/home/{{ .Release.Name }}/logs
    - name: DATA_ROOT
      value: /fsx/home/{{ .Release.Name }}
    - name: INPUT_DATA_PATH
      value: /fsx/data/redpajama/data.jsonl
    - name: MODEL_PATH
      value: /fsx/pretrained-models/meta-llama/Llama-2-70b-hf
  command:
    - python3
  args:
    - preprocess_data_for_megatron.py
    - --input=$INPUT_DATA_PATH
    - --json-keys=text
    - --tokenizer-library=huggingface
    - --tokenizer-type=$MODEL_PATH
    - --dataset-impl=mmap
    - --output-prefix=/tmp/datasets/tokenized
    - --append-eod
    - --need-pad-id
    - --workers=32
    - '2>&1 | tee $OUTPUT_LOG'
